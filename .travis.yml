env:
  global:
  # Docker Repository
  - REPO=docker.io/chsaexercises
  
sudo: required
services:
  - docker

before_install:
  # Install Katacoda  CLI
  - npm install -g katacoda-cli

jobs:
  include:
  - stage: Build Hyperledger Sawtooth Install
    env:
      - PATHWAY=hyperledger-sawtooth-install
    script: >-
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id); 
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose up -d --build
        popd
      done
    after_success: >-
      echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin &&
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id);
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose push
        popd
      done
  - stage: Build Hyperledger Sawtooth Configuration
    env:
      - PATHWAY=hyperledger-sawtooth-configuration
    script: >-
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id); 
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose up -d --build
        popd
      done
    after_success: >-
      echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin &&
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id);
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose push
        popd
      done
  - stage: Build Hyperledger Sawtooth Security
    env:
      - PATHWAY=hyperledger-sawtooth-security
    script: >-
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id); 
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose up -d --build
        popd
      done
    after_success: >-
      echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin &&
      for SCENARIO in $(cat ${PATHWAY}-pathway.json | jq -r .courses[].course_id);
      do 
        pushd ${PATHWAY}/${SCENARIO}/assets/ && 
        docker-compose push
        popd
      done

  # - stage: Build a1
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a1
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push
  # - stage: Build a2
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a2
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push
  # - stage: Build a3
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a3
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push
  # - stage: Build a4
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a4
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push
  # - stage: Build a5
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a5
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push
  # - stage: Build a6
  #   env:
  #     - PATHWAY=hyperledger-sawtooth-install
  #     - SCENARIO=a6
  #   script: 
  #     - pushd ${PATHWAY}/${SCENARIO}*/assets/
  #     - docker-compose up -d --build
  #   after_success:
  #     - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin;
  #     - docker-compose push